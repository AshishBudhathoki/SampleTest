plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.demo.sampletest"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$rootProject.core_ktx_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "com.google.android.material:material:$rootProject.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraint_layout_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines_android_version"

    // Retrofit + GSON
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttp_logging_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timber_version"

    //Picasso
    implementation "com.squareup.picasso:picasso:$rootProject.picasso_version"

    // SwipeRefreshLayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.swipe_referesh_version"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragment_ktx_version"
    // Local Unit tests

    testImplementation "junit:junit:$rootProject.junit_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockito_kotlin_version"
    testImplementation "androidx.arch.core:core-testing:$rootProject.arch_version"

    testImplementation('org.threeten:threetenbp:1.3.2') {
        exclude group: 'com.jakewharton.threetenabp', module: 'threetenabp'
    }
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutines_android_version"

    // Android tests
    // Core library
    androidTestImplementation "androidx.test:core:$rootProject.test_core_version"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$rootProject.test_runner_version"
    androidTestImplementation "androidx.test:rules:$rootProject.test_rules_version"
    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$rootProject.test_ext_junit_version"
    androidTestImplementation "androidx.test.ext:truth:$rootProject.test_ext_truth_version"
    androidTestImplementation "com.google.truth:truth:$rootProject.google_truth_version"

    // Lifecycle
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.arch_version"
    // Coroutines test
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutines_android_version"
}